# Generated by Django 5.1.6 on 2025-05-05 18:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название учёной степени')),
                ('name_ru', models.CharField(max_length=100, null=True, unique=True, verbose_name='Название учёной степени')),
                ('name_tg', models.CharField(max_length=100, null=True, unique=True, verbose_name='Название учёной степени')),
            ],
            options={
                'verbose_name': 'Научная степень',
                'verbose_name_plural': 'Научные степени',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Advantage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название преимущества')),
                ('name_ru', models.CharField(max_length=150, null=True, verbose_name='Название преимущества')),
                ('name_tg', models.CharField(max_length=150, null=True, verbose_name='Название преимущества')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('description_ru', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('description_tg', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Преимущество',
                'verbose_name_plural': 'Преимущества',
            },
        ),
        migrations.CreateModel(
            name='ExperienceLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(help_text='Диапазон лет опыта работы', max_length=50, unique=True, verbose_name='Уровень опыта')),
                ('level_ru', models.CharField(help_text='Диапазон лет опыта работы', max_length=50, null=True, unique=True, verbose_name='Уровень опыта')),
                ('level_tg', models.CharField(help_text='Диапазон лет опыта работы', max_length=50, null=True, unique=True, verbose_name='Уровень опыта')),
            ],
            options={
                'verbose_name': 'Уровень опыта',
                'verbose_name_plural': 'Уровни опыта',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название пола (мужской, женский)')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='Название пола (мужской, женский)')),
                ('name_tg', models.CharField(max_length=100, null=True, verbose_name='Название пола (мужской, женский)')),
            ],
            options={
                'verbose_name': 'Пол (мужской, женский)',
                'verbose_name_plural': 'Полы (мужской, женский)',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название языка', max_length=100, unique=True, verbose_name='Язык')),
                ('name_ru', models.CharField(help_text='Название языка', max_length=100, null=True, unique=True, verbose_name='Язык')),
                ('name_tg', models.CharField(help_text='Название языка', max_length=100, null=True, unique=True, verbose_name='Язык')),
            ],
            options={
                'verbose_name': 'Язык',
                'verbose_name_plural': 'Языки',
            },
        ),
        migrations.CreateModel(
            name='LanguageLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(help_text='Уровень владения языком', max_length=100, unique=True, verbose_name='Уровень владения')),
                ('level_ru', models.CharField(help_text='Уровень владения языком', max_length=100, null=True, unique=True, verbose_name='Уровень владения')),
                ('level_tg', models.CharField(help_text='Уровень владения языком', max_length=100, null=True, unique=True, verbose_name='Уровень владения')),
            ],
            options={
                'verbose_name': 'Уровень владения языком',
                'verbose_name_plural': 'Уровни владения языками',
            },
        ),
        migrations.CreateModel(
            name='MedicalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название медицинской категории')),
                ('name_ru', models.CharField(max_length=255, null=True, unique=True, verbose_name='Название медицинской категории')),
                ('name_tg', models.CharField(max_length=255, null=True, unique=True, verbose_name='Название медицинской категории')),
            ],
            options={
                'verbose_name': 'Медицинская категория',
                'verbose_name_plural': 'Медицинские категории',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='Название региона')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='Название региона')),
                ('name_tg', models.CharField(max_length=100, null=True, verbose_name='Название региона')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServicePlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Место предоставляемой услуги')),
                ('name_ru', models.CharField(max_length=255, null=True, unique=True, verbose_name='Место предоставляемой услуги')),
                ('name_tg', models.CharField(max_length=255, null=True, unique=True, verbose_name='Место предоставляемой услуги')),
            ],
            options={
                'verbose_name': 'Место предоставляемой услуги',
                'verbose_name_plural': 'Места предоставляемых услуг',
            },
        ),
        migrations.CreateModel(
            name='SocialStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Название социального статуса (например, 'Студент', 'Пенсионер').", max_length=50, unique=True, verbose_name='Название')),
                ('name_ru', models.CharField(help_text="Название социального статуса (например, 'Студент', 'Пенсионер').", max_length=50, null=True, unique=True, verbose_name='Название')),
                ('name_tg', models.CharField(help_text="Название социального статуса (например, 'Студент', 'Пенсионер').", max_length=50, null=True, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Краткое описание социального статуса.', null=True, verbose_name='Описание')),
                ('description_ru', models.TextField(blank=True, help_text='Краткое описание социального статуса.', null=True, verbose_name='Описание')),
                ('description_tg', models.TextField(blank=True, help_text='Краткое описание социального статуса.', null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Социальный статус',
                'verbose_name_plural': 'Социальные статусы',
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название специальности')),
                ('name_ru', models.CharField(max_length=255, null=True, unique=True, verbose_name='Название специальности')),
                ('name_tg', models.CharField(max_length=255, null=True, unique=True, verbose_name='Название специальности')),
            ],
            options={
                'verbose_name': 'Специальность',
                'verbose_name_plural': 'Специальности',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название вуза')),
                ('name_ru', models.CharField(max_length=255, null=True, unique=True, verbose_name='Название вуза')),
                ('name_tg', models.CharField(max_length=255, null=True, unique=True, verbose_name='Название вуза')),
                ('city', models.CharField(max_length=255, verbose_name='Город, где находится вуз')),
                ('city_ru', models.CharField(max_length=255, null=True, verbose_name='Город, где находится вуз')),
                ('city_tg', models.CharField(max_length=255, null=True, verbose_name='Город, где находится вуз')),
                ('country', models.CharField(max_length=255, verbose_name='Страна, где находится вуз')),
                ('country_ru', models.CharField(max_length=255, null=True, verbose_name='Страна, где находится вуз')),
                ('country_tg', models.CharField(max_length=255, null=True, verbose_name='Страна, где находится вуз')),
            ],
            options={
                'verbose_name': 'Вуз',
                'verbose_name_plural': 'Вузы',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=2, null=True, unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='Название района')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='Название района')),
                ('name_tg', models.CharField(max_length=100, null=True, verbose_name='Название района')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='a_base.region', verbose_name='Регион')),
            ],
            options={
                'verbose_name': 'Район',
                'verbose_name_plural': 'Районы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название услуги')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='Название услуги')),
                ('name_tg', models.CharField(max_length=255, null=True, verbose_name='Название услуги')),
                ('description', models.TextField(blank=True, verbose_name='Описание услуги')),
                ('description_ru', models.TextField(blank=True, null=True, verbose_name='Описание услуги')),
                ('description_tg', models.TextField(blank=True, null=True, verbose_name='Описание услуги')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена')),
                ('service_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='a_base.serviceplace', verbose_name='Место предоставляемой услуги')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название подписки')),
                ('name_ru', models.CharField(max_length=150, null=True, verbose_name='Название подписки')),
                ('name_tg', models.CharField(max_length=150, null=True, verbose_name='Название подписки')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('description_ru', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('description_tg', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, help_text='Цена в сомони', max_digits=10, verbose_name='Цена')),
                ('duration_days', models.PositiveIntegerField(help_text='Сколько дней действует подписка после активации', verbose_name='Длительность (дней)')),
                ('is_active', models.BooleanField(default=True, help_text='Доступна ли подписка для покупки', verbose_name='Активна')),
                ('advantages', models.ManyToManyField(blank=True, related_name='subscriptions', to='a_base.advantage', verbose_name='Преимущества')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
                'ordering': ['name'],
            },
        ),
    ]
