# Generated by Django 5.1.6 on 2025-04-01 12:28

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Название социального статуса (например, 'Студент', 'Пенсионер').", max_length=50, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Краткое описание социального статуса.', null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Социальный статус',
                'verbose_name_plural': 'Социальные статусы',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport', models.CharField(blank=True, help_text='Серия и номер паспорта пациента.', max_length=10, null=True, verbose_name='Серия и номер паспорта')),
                ('registration_address', models.CharField(blank=True, help_text='Адрес по прописке (город/район).', max_length=255, null=True, verbose_name='Адрес по прописке')),
                ('actual_address', models.CharField(blank=True, help_text='Адрес фактического проживания (город/район).', max_length=255, null=True, verbose_name='Адрес фактического проживания')),
                ('sin', models.CharField(blank=True, help_text='Социальный идентификационный номер.', max_length=20, null=True, verbose_name='СИН')),
                ('eng', models.CharField(blank=True, help_text='Единый номер гражданина.', max_length=20, null=True, verbose_name='ЕНГ')),
                ('weight', models.DecimalField(decimal_places=2, help_text='Вес в килограммах', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Вес (кг)')),
                ('height', models.DecimalField(decimal_places=2, help_text='Рост в сантиметрах', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Рост (см)')),
                ('blood_type', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], help_text='Группа крови и резус-фактор', max_length=3, verbose_name='Группа крови')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.OneToOneField(help_text='Связанный пользователь.', on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('social_status', models.ForeignKey(blank=True, help_text='Социальный статус пациента.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='patients.socialstatus', verbose_name='Социальный статус')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
            },
        ),
    ]
